@{
    Layout = "~/Views/Shared/_Layout-Admin.cshtml";
}


@model QuanLyTruongHoc.Models.@new
@{
    IEnumerable<QuanLyTruongHoc.Models.news_group> nhomtin = ViewData["NhomTintuc"] as IEnumerable<QuanLyTruongHoc.Models.news_group>;
}


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3 class="text-center"><strong>Chỉnh sửa tin tức</strong></h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @*@Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="title">Tiêu đề</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.imageNews, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="imageNews">Hình ảnh</label>
            <div class="col-md-10">
                <input title="Upload an image" type="file" name="imageNews" />
                @*@Html.EditorFor(model => model.imageNews, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.imageNews, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.content, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="content">Nội dung</label>
            <div class="col-md-10">

                @Html.TextAreaFor(model => model.content, new { rows = "10", style = "resize:none; width:400px;", @class = "form-control input-lg" })

                @*@Html.EditorFor(model => model.content, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.created_at, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="created_at">Ngày tạo</label>
            <div class="col-md-10">
                <input class="form-control" name="created_at" type="date" value="@string.Format("{0:yyyy-MM-dd}", Convert.ToDateTime(Html.DisplayFor(model => model.created_at).ToString()))" />
                @*@Html.EditorFor(model => model.created_at, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.created_at, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Session["UserGroupSession"].ToString() == "1")
        {
            <div class="form-group">
                @*@Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <label class="control-label col-md-2" for="status">Trạng thái</label>
                <div class="col-md-10">

                    <select class="form-control list-box tri-state" id="status" name="status">
                        <option value="false" @if (Model.status == false) { @("selected") }>Ẩn</option>
                        <option value="true" @if (Model.status == true) { @("selected") }>Hiện</option>
                    </select>

                    @*@Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            @*@Html.LabelFor(model => model.newsgroup_id, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2" for="newsgroup_id">Loại tin tức</label>
            <div class="col-md-10">

                <select class="form-control list-box tri-state" id="newsgroup_id" name="newsgroup_id">
                    @foreach (var nt in nhomtin)
                    {
                        <option value="@nt.id" @if (Model.newsgroup_id == nt.id) { @("selected") }>@nt.name</option>
                    }
                </select>

                @*@Html.EditorFor(model => model.newsgroup_id, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.newsgroup_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*<div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>*@
            <div class="col-md-6">
                <input type="submit" value="Update" class="btn btn-success btn-sm" />
            </div>
        </div>
    </div>
}

<div class="col">
    @*@Html.ActionLink("Back to List", "Index")*@
    <a href="@Url.Action("Index", "TinTuc")"><i class="btn btn-warning btn-sm">Back To List</i></a>
</div>




@section Scripts
{
    <link href="~/Content/mycontent/dist/css/summernote.min.css" rel="stylesheet" />
    <script src="~/Content/mycontent/dist/js/summernote.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#content').summernote({
                width: 800,                  // set editor width
                height: 200,                 // set editor height
                minHeight: null,             // set minimum height of editor
                maxHeight: null,             // set maximum height of editor
            });
        });
    </script>
}